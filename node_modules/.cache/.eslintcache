[{"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\Store.js":"3","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\App.js":"4","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\utils.js":"5","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SignupScreen.js":"7","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SigninScreen.js":"8","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\PaymentMethodScreen.js":"10","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ShippingAddressScreen.js":"11","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductScreen.js":"12","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderScreen.js":"13","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\DashboardScreen.js":"14","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\PlaceOrderScreen.js":"15","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SearchScreen.js":"16","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderHistoryScreen.js":"17","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductListScreen.js":"18","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProfileScreen.js":"19","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderListScreen.js":"20","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\UserListScreen.js":"21","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductEditScreen.js":"22","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\UserEditScreen.js":"23","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\MapScreen.js":"24","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ForgetPasswordScreen.js":"25","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ResetPasswordScreen.js":"26","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\ProtectedRoute.js":"27","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\SearchBox.js":"28","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\AdminRoute.js":"29","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\LoadingBox.js":"30","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\MessageBox.js":"31","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\Product.js":"32","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\CheckoutSteps.js":"33","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\Rating.js":"34"},{"size":915,"mtime":1676564142000,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1676564142000,"results":"37","hashOfConfig":"36"},{"size":2829,"mtime":1676564142000,"results":"38","hashOfConfig":"36"},{"size":10706,"mtime":1697499606689,"results":"39","hashOfConfig":"36"},{"size":150,"mtime":1676564142000,"results":"40","hashOfConfig":"36"},{"size":2320,"mtime":1698220836318,"results":"41","hashOfConfig":"36"},{"size":3212,"mtime":1697499025552,"results":"42","hashOfConfig":"36"},{"size":2548,"mtime":1698212726676,"results":"43","hashOfConfig":"36"},{"size":4385,"mtime":1698198149898,"results":"44","hashOfConfig":"36"},{"size":2080,"mtime":1676564142000,"results":"45","hashOfConfig":"36"},{"size":4147,"mtime":1676564142000,"results":"46","hashOfConfig":"36"},{"size":9263,"mtime":1698225371787,"results":"47","hashOfConfig":"36"},{"size":10656,"mtime":1698212660871,"results":"48","hashOfConfig":"36"},{"size":4109,"mtime":1697144657904,"results":"49","hashOfConfig":"36"},{"size":6429,"mtime":1698213536453,"results":"50","hashOfConfig":"36"},{"size":8807,"mtime":1697145457805,"results":"51","hashOfConfig":"36"},{"size":3010,"mtime":1697145648218,"results":"52","hashOfConfig":"36"},{"size":6217,"mtime":1697411143934,"results":"53","hashOfConfig":"36"},{"size":3186,"mtime":1697145851810,"results":"54","hashOfConfig":"36"},{"size":4546,"mtime":1697145693440,"results":"55","hashOfConfig":"36"},{"size":4128,"mtime":1697145548863,"results":"56","hashOfConfig":"36"},{"size":9591,"mtime":1698224911686,"results":"57","hashOfConfig":"36"},{"size":4188,"mtime":1697145481781,"results":"58","hashOfConfig":"36"},{"size":3665,"mtime":1698217724672,"results":"59","hashOfConfig":"36"},{"size":1591,"mtime":1676564142000,"results":"60","hashOfConfig":"36"},{"size":2187,"mtime":1676564142000,"results":"61","hashOfConfig":"36"},{"size":307,"mtime":1697145583142,"results":"62","hashOfConfig":"36"},{"size":1073,"mtime":1676564142000,"results":"63","hashOfConfig":"36"},{"size":323,"mtime":1697145566911,"results":"64","hashOfConfig":"36"},{"size":225,"mtime":1676564142000,"results":"65","hashOfConfig":"36"},{"size":166,"mtime":1676564142000,"results":"66","hashOfConfig":"36"},{"size":1715,"mtime":1698251264581,"results":"67","hashOfConfig":"36"},{"size":484,"mtime":1676564142000,"results":"68","hashOfConfig":"36"},{"size":1459,"mtime":1676564142000,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"181libq",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"73"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\Store.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\App.js",["178"],[],"import { BrowserRouter, Link, Route, Routes } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Badge from 'react-bootstrap/Badge';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useContext, useEffect, useState } from 'react';\nimport { Store } from './Store';\nimport CartScreen from './screens/CartScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport SignupScreen from './screens/SignupScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport Button from 'react-bootstrap/Button';\nimport { getError } from './utils';\nimport axios from 'axios';\nimport SearchBox from './components/SearchBox';\nimport SearchScreen from './screens/SearchScreen';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport DashboardScreen from './screens/DashboardScreen';\nimport AdminRoute from './components/AdminRoute';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport MapScreen from './screens/MapScreen';\nimport ForgetPasswordScreen from './screens/ForgetPasswordScreen';\nimport ResetPasswordScreen from './screens/ResetPasswordScreen';\n\nfunction App() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { fullBox, cart, userInfo } = state;\n\n  const signoutHandler = () => {\n    ctxDispatch({ type: 'USER_SIGNOUT' });\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('shippingAddress');\n    localStorage.removeItem('paymentMethod');\n    window.location.href = '/signin';\n  };\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const { data } = await axios.get(`https://apiwenandapp.onrender.com/api/products/categories`);\n        setCategories(data);\n      } catch (err) {\n        toast.error(getError(err));\n      }\n    };\n    fetchCategories();\n  }, []);\n  return (\n    <BrowserRouter>\n      <div\n        className={\n          sidebarIsOpen\n            ? fullBox\n              ? 'site-container active-cont d-flex flex-column full-box'\n              : 'site-container active-cont d-flex flex-column'\n            : fullBox\n            ? 'site-container d-flex flex-column full-box'\n            : 'site-container d-flex flex-column'\n        }\n      >\n        <ToastContainer position=\"bottom-center\" limit={1} />\n        <header>\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n              <Button\n                variant=\"dark\"\n                onClick={() => setSidebarIsOpen(!sidebarIsOpen)}\n              >\n                <i className=\"fas fa-bars\"></i>\n              </Button>\n\n              <LinkContainer to=\"/\">\n                <Navbar.Brand>\n                  <img style={{width:110,height:45 ,padding:0}} src='https://cdn.haitrieu.com/wp-content/uploads/2022/05/Logo-Yody.png'/>\n                </Navbar.Brand>\n              </LinkContainer>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <SearchBox />\n                <Nav className=\"me-auto  w-100  justify-content-end\">\n                  <Link to=\"/cart\" className=\"nav-link\">\n                    Cart\n                    {cart.cartItems.length > 0 && (\n                      <Badge pill bg=\"danger\">\n                        {cart.cartItems.reduce((a, c) => a + c.quantity, 0)}\n                      </Badge>\n                    )}\n                  </Link>\n                  {userInfo ? (\n                    <NavDropdown title={userInfo.name} id=\"basic-nav-dropdown\">\n                      <LinkContainer to=\"/profile\">\n                        <NavDropdown.Item>User Profile</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/orderhistory\">\n                        <NavDropdown.Item>Order History</NavDropdown.Item>\n                      </LinkContainer>\n                      <NavDropdown.Divider />\n                      <Link\n                        className=\"dropdown-item\"\n                        to=\"#signout\"\n                        onClick={signoutHandler}\n                      >\n                        Sign Out\n                      </Link>\n                    </NavDropdown>\n                  ) : (\n                    <Link className=\"nav-link\" to=\"/signin\">\n                      Sign In\n                    </Link>\n                  )}\n                  {userInfo && userInfo.isAdmin && (\n                    <NavDropdown title=\"Admin\" id=\"admin-nav-dropdown\">\n                      <LinkContainer to=\"/admin/dashboard\">\n                        <NavDropdown.Item>Dashboard</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/admin/products\">\n                        <NavDropdown.Item>Products</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/admin/orders\">\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/admin/users\">\n                        <NavDropdown.Item>Users</NavDropdown.Item>\n                      </LinkContainer>\n                    </NavDropdown>\n                  )}\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </header>\n        <div\n          className={\n            sidebarIsOpen\n              ? 'active-nav side-navbar d-flex justify-content-between flex-wrap flex-column'\n              : 'side-navbar d-flex justify-content-between flex-wrap flex-column'\n          }\n        >\n          <Nav className=\"flex-column text-white w-100 p-2\">\n            <Nav.Item>\n              <strong>Categories</strong>\n            </Nav.Item>\n            {categories.map((category) => (\n              <Nav.Item key={category}>\n                <LinkContainer\n                  to={{ pathname: '/search', search: `category=${category}` }}\n                  onClick={() => setSidebarIsOpen(false)}\n                >\n                  <Nav.Link>{category}</Nav.Link>\n                </LinkContainer>\n              </Nav.Item>\n            ))}\n          </Nav>\n        </div>\n        <main>\n          <Container className=\"mt-3\">\n            <Routes>\n              <Route path=\"/product/:slug\" element={<ProductScreen />} />\n              <Route path=\"/cart\" element={<CartScreen />} />\n              <Route path=\"/search\" element={<SearchScreen />} />\n              <Route path=\"/signin\" element={<SigninScreen />} />\n              <Route path=\"/signup\" element={<SignupScreen />} />\n              <Route\n                path=\"/forget-password\"\n                element={<ForgetPasswordScreen />}\n              />\n              <Route\n                path=\"/reset-password/:token\"\n                element={<ResetPasswordScreen />}\n              />\n\n              <Route\n                path=\"/profile\"\n                element={\n                  <ProtectedRoute>\n                    <ProfileScreen />\n                  </ProtectedRoute>\n                }\n              />\n              <Route\n                path=\"/map\"\n                element={\n                  <ProtectedRoute>\n                    <MapScreen />\n                  </ProtectedRoute>\n                }\n              />\n              <Route path=\"/placeorder\" element={<PlaceOrderScreen />} />\n              <Route\n                path=\"/order/:id\"\n                element={\n                  <ProtectedRoute>\n                    <OrderScreen />\n                  </ProtectedRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/orderhistory\"\n                element={\n                  <ProtectedRoute>\n                    <OrderHistoryScreen />\n                  </ProtectedRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/shipping\"\n                element={<ShippingAddressScreen />}\n              ></Route>\n              <Route path=\"/payment\" element={<PaymentMethodScreen />}></Route>\n              {/* Admin Routes */}\n              <Route\n                path=\"/admin/dashboard\"\n                element={\n                  <AdminRoute>\n                    <DashboardScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/orders\"\n                element={\n                  <AdminRoute>\n                    <OrderListScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/users\"\n                element={\n                  <AdminRoute>\n                    <UserListScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/products\"\n                element={\n                  <AdminRoute>\n                    <ProductListScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/product/:id\"\n                element={\n                  <AdminRoute>\n                    <ProductEditScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/user/:id\"\n                element={\n                  <AdminRoute>\n                    <UserEditScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n\n              <Route path=\"/\" element={<HomeScreen />} />\n            </Routes>\n          </Container>\n        </main>\n        <footer>\n          <div className=\"text-center\">All rights reserved</div>\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\utils.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\HomeScreen.js",["179","180","181"],[],"import { useEffect, useReducer, useState ,useRef} from \"react\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Product from \"../components/Product\";\nimport { Helmet } from \"react-helmet-async\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport io from \"socket.io-client\";\nconst socket = io.connect(\"https://socketio-rhix.onrender.com\");\n// import data from '../data';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return { ...state, loading: true };\n    case \"FETCH_SUCCESS\":\n      return { ...state, products: action.payload, loading: false };\n    case \"FETCH_FAIL\":\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\n\n\nfunction HomeScreen() {\n  const [productss,setProducts]  =useState()\n  const [{ loading, error, products }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: \"\",\n  });\n  // const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_REQUEST\" });\n      try {\n     \n        socket.emit('getproduct')\n        socket.on('productData',function(result){\n            const data1=result\n            setProducts(result)\n          dispatch({ type: \"FETCH_SUCCESS\", payload: data1.data });\n        })\n        //const result = await axios.get(\"https://apiwenandapp.onrender.com/api/products\");\n       \n       \n      } catch (err) {\n        dispatch({ type: \"FETCH_FAIL\", payload: err.message });\n      }\n\n      // setProducts(result.data);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <Helmet>\n        <title>Yody.com</title>\n      </Helmet>\n      <h1>Featured Products</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <Row>\n            {productss.map((product) => (\n              <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                <Product product={product}></Product>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default HomeScreen;\n","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SignupScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SigninScreen.js",[],[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\CartScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\PaymentMethodScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ShippingAddressScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\DashboardScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\PlaceOrderScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SearchScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderHistoryScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductListScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProfileScreen.js",["182","183"],[],"import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        'https://apiwenandapp.onrender.com/api/users/profile',\n        {\n          name,\n          email,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL',\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderListScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\UserListScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductEditScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\UserEditScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\MapScreen.js",["184"],[],"import axios from 'axios';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport {\n  LoadScript,\n  GoogleMap,\n  StandaloneSearchBox,\n  Marker,\n} from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\nconst libs = ['places'];\n\nexport default function MapScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const navigate = useNavigate();\n  const [googleApiKey, setGoogleApiKey] = useState('');\n  const [center, setCenter] = useState(defaultLocation);\n  const [location, setLocation] = useState(center);\n\n  const mapRef = useRef(null);\n  const placeRef = useRef(null);\n  const markerRef = useRef(null);\n\n  const getUserCurrentLocation = () => {\n    if (!navigator.geolocation) {\n      alert('Geolocation os not supported by this browser');\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        setLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n    }\n  };\n  useEffect(() => {\n    const fetch = async () => {\n      const { data } = await axios('/api/keys/google', {\n       \n        headers: { Authorization: `BEARER ${userInfo.token}` },\n      });\n      console.log(\"gfd\"+data.key);\n      setGoogleApiKey(\"44f740ec2a76b1de905c96c8beefb1883a70802b\");\n      getUserCurrentLocation();\n    };\n\n    fetch();\n    ctxDispatch({\n      type: 'SET_FULLBOX_ON',\n    });\n  }, [ctxDispatch]);\n\n  const onLoad = (map) => {\n    mapRef.current = map;\n  };\n  const onIdle = () => {\n    setLocation({\n      lat: mapRef.current.center.lat(),\n      lng: mapRef.current.center.lng(),\n    });\n  };\n\n  const onLoadPlaces = (place) => {\n    placeRef.current = place;\n  };\n  const onPlacesChanged = () => {\n    const place = placeRef.current.getPlaces()[0].geometry.location;\n    setCenter({ lat: place.lat(), lng: place.lng() });\n    setLocation({ lat: place.lat(), lng: place.lng() });\n  };\n\n  const onMarkerLoad = (marker) => {\n    markerRef.current = marker;\n  };\n\n  const onConfirm = () => {\n    const places = placeRef.current.getPlaces() || [{}];\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',\n      payload: {\n        lat: location.lat,\n        lng: location.lng,\n        address: places[0].formatted_address,\n        name: places[0].name,\n        vicinity: places[0].vicinity,\n        googleAddressId: places[0].id,\n      },\n    });\n    toast.success('location selected successfully.');\n    navigate('/shipping');\n  };\n  return (\n    <div className=\"full-box\">\n      <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\n        <GoogleMap\n          id=\"smaple-map\"\n          mapContainerStyle={{ height: '100%', width: '100%' }}\n          center={center}\n          zoom={15}\n          onLoad={onLoad}\n          onIdle={onIdle}\n        >\n          <StandaloneSearchBox\n            onLoad={onLoadPlaces}\n            onPlacesChanged={onPlacesChanged}\n          >\n            <div className=\"map-input-box\">\n              <input type=\"text\" placeholder=\"Enter your address\"></input>\n              <Button type=\"button\" onClick={onConfirm}>\n                Confirm\n              </Button>\n            </div>\n          </StandaloneSearchBox>\n          <Marker position={location} onLoad={onMarkerLoad}></Marker>\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ForgetPasswordScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ResetPasswordScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\ProtectedRoute.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\SearchBox.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\AdminRoute.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\LoadingBox.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\MessageBox.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\Product.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\Rating.js",[],[],{"ruleId":"185","severity":1,"message":"186","line":91,"column":19,"nodeType":"187","endLine":91,"endColumn":138},{"ruleId":"188","severity":1,"message":"189","line":1,"column":43,"nodeType":"190","messageId":"191","endLine":1,"endColumn":49},{"ruleId":"188","severity":1,"message":"192","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":13},{"ruleId":"188","severity":1,"message":"193","line":30,"column":28,"nodeType":"190","messageId":"191","endLine":30,"endColumn":36},{"ruleId":"188","severity":1,"message":"194","line":30,"column":10,"nodeType":"190","messageId":"191","endLine":30,"endColumn":25},{"ruleId":"188","severity":1,"message":"195","line":32,"column":12,"nodeType":"190","messageId":"191","endLine":32,"endColumn":25},{"ruleId":"196","severity":1,"message":"197","line":60,"column":6,"nodeType":"198","endLine":60,"endColumn":19,"suggestions":"199"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'products' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo.token'. Either include it or remove the dependency array.","ArrayExpression",["200"],{"desc":"201","fix":"202"},"Update the dependencies array to be: [ctxDispatch, userInfo.token]",{"range":"203","text":"204"},[1750,1763],"[ctxDispatch, userInfo.token]"]