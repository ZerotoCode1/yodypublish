[{"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\Store.js":"3","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\App.js":"4","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\utils.js":"5","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SignupScreen.js":"7","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SigninScreen.js":"8","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\PaymentMethodScreen.js":"10","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ShippingAddressScreen.js":"11","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductScreen.js":"12","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderScreen.js":"13","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\DashboardScreen.js":"14","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\PlaceOrderScreen.js":"15","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SearchScreen.js":"16","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderHistoryScreen.js":"17","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductListScreen.js":"18","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProfileScreen.js":"19","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderListScreen.js":"20","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\UserListScreen.js":"21","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductEditScreen.js":"22","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\UserEditScreen.js":"23","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\MapScreen.js":"24","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ForgetPasswordScreen.js":"25","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ResetPasswordScreen.js":"26","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\ProtectedRoute.js":"27","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\SearchBox.js":"28","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\AdminRoute.js":"29","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\LoadingBox.js":"30","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\MessageBox.js":"31","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\Product.js":"32","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\CheckoutSteps.js":"33","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\Rating.js":"34"},{"size":915,"mtime":1676564142000,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1676564142000,"results":"37","hashOfConfig":"36"},{"size":2829,"mtime":1676564142000,"results":"38","hashOfConfig":"36"},{"size":10558,"mtime":1697144857777,"results":"39","hashOfConfig":"36"},{"size":150,"mtime":1676564142000,"results":"40","hashOfConfig":"36"},{"size":2319,"mtime":1697410627941,"results":"41","hashOfConfig":"36"},{"size":3430,"mtime":1697145455489,"results":"42","hashOfConfig":"36"},{"size":2722,"mtime":1697145464230,"results":"43","hashOfConfig":"36"},{"size":4418,"mtime":1697144647048,"results":"44","hashOfConfig":"36"},{"size":2080,"mtime":1676564142000,"results":"45","hashOfConfig":"36"},{"size":4147,"mtime":1676564142000,"results":"46","hashOfConfig":"36"},{"size":9535,"mtime":1697145000648,"results":"47","hashOfConfig":"36"},{"size":10656,"mtime":1697145738944,"results":"48","hashOfConfig":"36"},{"size":4109,"mtime":1697144657904,"results":"49","hashOfConfig":"36"},{"size":6396,"mtime":1676564142000,"results":"50","hashOfConfig":"36"},{"size":8807,"mtime":1697145457805,"results":"51","hashOfConfig":"36"},{"size":3010,"mtime":1697145648218,"results":"52","hashOfConfig":"36"},{"size":6217,"mtime":1697411143934,"results":"53","hashOfConfig":"36"},{"size":3186,"mtime":1697145851810,"results":"54","hashOfConfig":"36"},{"size":4546,"mtime":1697145693440,"results":"55","hashOfConfig":"36"},{"size":4128,"mtime":1697145548863,"results":"56","hashOfConfig":"36"},{"size":9582,"mtime":1697411129731,"results":"57","hashOfConfig":"36"},{"size":4188,"mtime":1697145481781,"results":"58","hashOfConfig":"36"},{"size":3588,"mtime":1676564142000,"results":"59","hashOfConfig":"36"},{"size":1591,"mtime":1676564142000,"results":"60","hashOfConfig":"36"},{"size":2187,"mtime":1676564142000,"results":"61","hashOfConfig":"36"},{"size":307,"mtime":1697145583142,"results":"62","hashOfConfig":"36"},{"size":1073,"mtime":1676564142000,"results":"63","hashOfConfig":"36"},{"size":323,"mtime":1697145566911,"results":"64","hashOfConfig":"36"},{"size":225,"mtime":1676564142000,"results":"65","hashOfConfig":"36"},{"size":166,"mtime":1676564142000,"results":"66","hashOfConfig":"36"},{"size":1654,"mtime":1697147048606,"results":"67","hashOfConfig":"36"},{"size":484,"mtime":1676564142000,"results":"68","hashOfConfig":"36"},{"size":1459,"mtime":1676564142000,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"181libq",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"73"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"73"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"73"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\Store.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\App.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\utils.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\HomeScreen.js",["178","179","180"],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SignupScreen.js",["181","182","183"],[],"import Axios from 'axios';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { useContext, useEffect, useState } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\n\nexport default function SignupScreen() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  \n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if(name==\"\"){\n      window.alert(\"vui lòng nhập tên\")\n      return\n    }\n    if(email==\"\"){\n      window.alert(\"vui lòng nhập email\")\n      return\n    }\n    if(password==\"\"){\n      window.alert(\"vui lòng nhập mật khẩu\")\n      return\n    }\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match');\n      return;\n    }\n\n    try {\n      const { data } = await Axios.post('https://apiwenandapp.onrender.com/api/users/signup', {\n        name,\n        email,\n        password,\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      window.alert(\"Tạo tài khoản thành công\")\n      navigate(redirect || '/');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Sign Up</title>\n      </Helmet>\n      <h1 className=\"my-3\">Sign Up</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control onChange={(e) => setName(e.target.value)} required />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            \n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            \n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              \n            />\n          </Form.Group>\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Sign Up</Button>\n        </div>\n        <div className=\"mb-3\">\n          Already have an account?{' '}\n          <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SigninScreen.js",["184","185"],[],"import Axios from 'axios';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { useContext, useEffect, useState } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\n\nexport default function SigninScreen() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if(email==\"\"){\n   window.alert(\"Vui lòng nhập email\")\n    }\n    if(password==\"\"){\n      window.alert(\"Vui lòng nhập password\")\n       }\n\n \n    try {\n      const { data } = await Axios.post('https://apiwenandapp.onrender.com/api/users/signin', {\n        email,\n        password,\n      });\n     \n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      window.alert(\"Đăng nhập thành công\")\n      navigate(redirect || '/');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Sign In</title>\n      </Helmet>\n      <h1 className=\"my-3\">Sign In</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n        \n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n         \n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Sign In</Button>\n        </div>\n        <div className=\"mb-3\">\n          New customer?{' '}\n          <Link to={`/signup?redirect=${redirect}`}>Create your account</Link>\n        </div>\n        <div className=\"mb-3\">\n          Forget Password? <Link to={`/forget-password`}>Reset Password</Link>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\CartScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\PaymentMethodScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ShippingAddressScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductScreen.js",["186","187","188","189"],[],"import axios from 'axios';\nimport { useContext, useEffect, useReducer, useRef, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { getError } from '../utils';\nimport { Store } from '../Store';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport { toast } from 'react-toastify';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'REFRESH_PRODUCT':\n      return { ...state, product: action.payload };\n    case 'CREATE_REQUEST':\n      return { ...state, loadingCreateReview: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loadingCreateReview: false };\n    case 'CREATE_FAIL':\n      return { ...state, loadingCreateReview: false };\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, product: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nfunction ProductScreen() {\n  let reviewsRef = useRef();\n\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [selectedImage, setSelectedImage] = useState('');\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const { slug } = params;\n\n  const [{ loading, error, product, loadingCreateReview }, dispatch] =\n    useReducer(reducer, {\n      product: [],\n      loading: true,\n      error: '',\n    });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get(`https://apiwenandapp.onrender.com/api/products/slug/${slug}`);\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    };\n    fetchData();\n  }, [slug]);\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n  const addToCartHandler = async () => {\n    const existItem = cart.cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`https://apiwenandapp.onrender.com/api/products/${product._id}`);\n    if (data.countInStock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...product, quantity },\n    });\n    navigate('/cart');\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (comment=='' && rating=='') {\n      window.alert(\"Không được để trống\")\n      return;\n    }\n    if(comment==\"\"){\n     window.alert(\"Vui lòng nhập comment\")\n     return\n    }\n    if(rating==\"\"){\n      window.alert(\"vui lòng chọn rating\")\n      return\n     }\n\n    \n    try {\n      const { data } = await axios.post(\n        `https://apiwenandapp.onrender.com/api/products/${product._id}/reviews`,\n        { rating, comment, name: userInfo.name },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n\n      dispatch({\n        type: 'CREATE_SUCCESS',\n      });\n      toast.success('Review submitted successfully');\n      product.reviews.unshift(data.review);\n      product.numReviews = data.numReviews;\n      product.rating = data.rating;\n      dispatch({ type: 'REFRESH_PRODUCT', payload: product });\n      window.scrollTo({\n        behavior: 'smooth',\n        top: reviewsRef.current.offsetTop,\n      });\n      window.alert(\"Đã gửi đánh giá\")\n    } catch (error) {\n      window.alert(\"Bạn chỉ được đánh giá 1 lần\")\n      dispatch({ type: 'CREATE_FAIL' });\n    }\n  };\n  return loading ? (\n    <LoadingBox />\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      <Row>\n        <Col md={6}>\n          <img\n            className=\"img-large\"\n            src={selectedImage || product.image}\n            alt={product.name}\n          ></img>\n        </Col>\n        <Col md={3}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <Helmet>\n                <title>{product.name}</title>\n              </Helmet>\n              <h1>{product.name}</h1>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Rating\n                rating={product.rating}\n                numReviews={product.numReviews}\n              ></Rating>\n            </ListGroup.Item>\n            <ListGroup.Item>Pirce : ${product.price}</ListGroup.Item>\n            <ListGroup.Item>\n              <Row xs={1} md={2} className=\"g-2\">\n                {[product.image, ...product.images].map((x) => (\n                  <Col key={x}>\n                    <Card>\n                      <Button\n                        className=\"thumbnail\"\n                        type=\"button\"\n                        variant=\"light\"\n                        onClick={() => setSelectedImage(x)}\n                      >\n                        <Card.Img variant=\"top\" src={x} alt=\"product\" />\n                      </Button>\n                    </Card>\n                  </Col>\n                ))}\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Description:\n              <p>{product.description}</p>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={3}>\n          <Card>\n            <Card.Body>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>${product.price}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? (\n                        <Badge bg=\"success\">In Stock</Badge>\n                      ) : (\n                        <Badge bg=\"danger\">Unavailable</Badge>\n                      )}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <div className=\"d-grid\">\n                      <Button onClick={addToCartHandler} variant=\"primary\">\n                        Add to Cart\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <div className=\"my-3\">\n        <h2 ref={reviewsRef}>Reviews</h2>\n        <div className=\"mb-3\">\n          {product.reviews.length === 0 && (\n            <MessageBox>There is no review</MessageBox>\n          )}\n        </div>\n        <ListGroup>\n          {product.reviews.map((review) => (\n            <ListGroup.Item key={review._id}>\n              <strong>{review.name}</strong>\n              <Rating rating={review.rating} caption=\" \"></Rating>\n              <p>{review.createdAt.substring(0, 10)}</p>\n              <p>{review.comment}</p>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n        <div className=\"my-3\">\n          {userInfo ? (\n            <form onSubmit={submitHandler}>\n              <h2>Write a customer review</h2>\n              <Form.Group className=\"mb-3\" controlId=\"rating\">\n                <Form.Label>Rating</Form.Label>\n                <Form.Select\n                  aria-label=\"Rating\"\n                  value={rating}\n                  onChange={(e) => setRating(e.target.value)}\n                >\n                  <option value=\"\">Select...</option>\n                  <option value=\"1\">1- Poor</option>\n                  <option value=\"2\">2- Fair</option>\n                  <option value=\"3\">3- Good</option>\n                  <option value=\"4\">4- Very good</option>\n                  <option value=\"5\">5- Excelent</option>\n                </Form.Select>\n              </Form.Group>\n              <FloatingLabel\n                controlId=\"floatingTextarea\"\n                label=\"Comments\"\n                className=\"mb-3\"\n              >\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Leave a comment here\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n              </FloatingLabel>\n\n              <div className=\"mb-3\">\n                <Button disabled={loadingCreateReview} type=\"submit\">\n                  Submit\n                </Button>\n                {loadingCreateReview && <LoadingBox></LoadingBox>}\n              </div>\n            </form>\n          ) : (\n            <MessageBox>\n              Please{' '}\n              <Link to={`/signin?redirect=/product/${product.slug}`}>\n                Sign In\n              </Link>{' '}\n              to write a review\n            </MessageBox>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default ProductScreen;\n","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\DashboardScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\PlaceOrderScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\SearchScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderHistoryScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductListScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProfileScreen.js",["190","191"],[],"import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        'https://apiwenandapp.onrender.com/api/users/profile',\n        {\n          name,\n          email,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL',\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\OrderListScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\UserListScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ProductEditScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\UserEditScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\MapScreen.js",["192"],[],"import axios from 'axios';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport {\n  LoadScript,\n  GoogleMap,\n  StandaloneSearchBox,\n  Marker,\n} from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\nconst libs = ['places'];\n\nexport default function MapScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const navigate = useNavigate();\n  const [googleApiKey, setGoogleApiKey] = useState('');\n  const [center, setCenter] = useState(defaultLocation);\n  const [location, setLocation] = useState(center);\n\n  const mapRef = useRef(null);\n  const placeRef = useRef(null);\n  const markerRef = useRef(null);\n\n  const getUserCurrentLocation = () => {\n    if (!navigator.geolocation) {\n      alert('Geolocation os not supported by this browser');\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        setLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n    }\n  };\n  useEffect(() => {\n    const fetch = async () => {\n      const { data } = await axios('/api/keys/google', {\n        headers: { Authorization: `BEARER ${userInfo.token}` },\n      });\n      setGoogleApiKey(data.key);\n      getUserCurrentLocation();\n    };\n\n    fetch();\n    ctxDispatch({\n      type: 'SET_FULLBOX_ON',\n    });\n  }, [ctxDispatch]);\n\n  const onLoad = (map) => {\n    mapRef.current = map;\n  };\n  const onIdle = () => {\n    setLocation({\n      lat: mapRef.current.center.lat(),\n      lng: mapRef.current.center.lng(),\n    });\n  };\n\n  const onLoadPlaces = (place) => {\n    placeRef.current = place;\n  };\n  const onPlacesChanged = () => {\n    const place = placeRef.current.getPlaces()[0].geometry.location;\n    setCenter({ lat: place.lat(), lng: place.lng() });\n    setLocation({ lat: place.lat(), lng: place.lng() });\n  };\n\n  const onMarkerLoad = (marker) => {\n    markerRef.current = marker;\n  };\n\n  const onConfirm = () => {\n    const places = placeRef.current.getPlaces() || [{}];\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',\n      payload: {\n        lat: location.lat,\n        lng: location.lng,\n        address: places[0].formatted_address,\n        name: places[0].name,\n        vicinity: places[0].vicinity,\n        googleAddressId: places[0].id,\n      },\n    });\n    toast.success('location selected successfully.');\n    navigate('/shipping');\n  };\n  return (\n    <div className=\"full-box\">\n      <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\n        <GoogleMap\n          id=\"smaple-map\"\n          mapContainerStyle={{ height: '100%', width: '100%' }}\n          center={center}\n          zoom={15}\n          onLoad={onLoad}\n          onIdle={onIdle}\n        >\n          <StandaloneSearchBox\n            onLoad={onLoadPlaces}\n            onPlacesChanged={onPlacesChanged}\n          >\n            <div className=\"map-input-box\">\n              <input type=\"text\" placeholder=\"Enter your address\"></input>\n              <Button type=\"button\" onClick={onConfirm}>\n                Confirm\n              </Button>\n            </div>\n          </StandaloneSearchBox>\n          <Marker position={location} onLoad={onMarkerLoad}></Marker>\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n","C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ForgetPasswordScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\screens\\ResetPasswordScreen.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\ProtectedRoute.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\SearchBox.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\AdminRoute.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\LoadingBox.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\MessageBox.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\Product.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\Users\\Admin\\Downloads\\mern-amazona-master\\frontend\\src\\components\\Rating.js",[],[],{"ruleId":"193","severity":1,"message":"194","line":1,"column":43,"nodeType":"195","messageId":"196","endLine":1,"endColumn":49},{"ruleId":"193","severity":1,"message":"197","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":13},{"ruleId":"193","severity":1,"message":"198","line":30,"column":28,"nodeType":"195","messageId":"196","endLine":30,"endColumn":36},{"ruleId":"199","severity":1,"message":"200","line":28,"column":12,"nodeType":"201","messageId":"202","endLine":28,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":32,"column":13,"nodeType":"201","messageId":"202","endLine":32,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":36,"column":16,"nodeType":"201","messageId":"202","endLine":36,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":25,"column":13,"nodeType":"201","messageId":"202","endLine":25,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":28,"column":16,"nodeType":"201","messageId":"202","endLine":28,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":90,"column":16,"nodeType":"201","messageId":"202","endLine":90,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":90,"column":30,"nodeType":"201","messageId":"202","endLine":90,"endColumn":32},{"ruleId":"199","severity":1,"message":"200","line":94,"column":15,"nodeType":"201","messageId":"202","endLine":94,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":98,"column":14,"nodeType":"201","messageId":"202","endLine":98,"endColumn":16},{"ruleId":"193","severity":1,"message":"203","line":30,"column":10,"nodeType":"195","messageId":"196","endLine":30,"endColumn":25},{"ruleId":"193","severity":1,"message":"204","line":32,"column":12,"nodeType":"195","messageId":"196","endLine":32,"endColumn":25},{"ruleId":"205","severity":1,"message":"206","line":58,"column":6,"nodeType":"207","endLine":58,"endColumn":19,"suggestions":"208"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'products' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo.token'. Either include it or remove the dependency array.","ArrayExpression",["209"],{"desc":"210","fix":"211"},"Update the dependencies array to be: [ctxDispatch, userInfo.token]",{"range":"212","text":"213"},[1673,1686],"[ctxDispatch, userInfo.token]"]