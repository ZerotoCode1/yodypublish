{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\mern-amazona-master\\\\frontend\\\\src\\\\screens\\\\ZalopayScreens.js\";\nimport React, { useState } from 'react';\nimport ZaloPaySDK from 'zalopay-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZalopayScreens = () => {\n  const handleSandboxPayment = async () => {\n    const api_key = '9phuAOYhan4urywHTh0ndEXiV3pKHr5Q';\n\n    // Tạo dữ liệu đơn hàng thử nghiệm\n    const orderData = {\n      app_id: '553',\n      app_user: 'user123',\n      app_time: new Date().toISOString(),\n      app_trans_id: 'TEST123',\n      app_data: 'Test data',\n      amount: 10000,\n      // Số tiền thanh toán thử nghiệm\n      description: 'Thanh toán thử nghiệm'\n    };\n\n    // Gửi dữ liệu đơn hàng và thông tin API key đến ZaloPay Sandbox\n    fetch('https://sandbox.zalopay.com.vn/api/v2/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-magento-secret': api_key\n      },\n      body: JSON.stringify(orderData)\n    }).then(response => response.json()).then(data => {\n      // Xử lý kết quả và thực hiện thanh toán thử nghiệm\n      if (data.returncode === 1) {\n        window.location.href = data.orderurl; // Redirect người dùng đến URL thanh toán\n      } else {\n        console.error('Lỗi khi tạo đơn hàng:', data.returnmessage);\n      }\n    }).catch(error => {\n      console.error('Lỗi khi gửi yêu cầu đơn hàng:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ch\\u1ECDn ZaloPay Sandbox \\u0111\\u1EC3 thanh to\\xE1n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSandboxPayment,\n      children: \"Thanh to\\xE1n v\\u1EDBi ZaloPay Sandbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = ZalopayScreens;\nexport default ZalopayScreens;\nvar _c;\n$RefreshReg$(_c, \"ZalopayScreens\");","map":{"version":3,"names":["React","useState","ZaloPaySDK","ZalopayScreens","handleSandboxPayment","api_key","orderData","app_id","app_user","app_time","Date","toISOString","app_trans_id","app_data","amount","description","fetch","method","headers","body","JSON","stringify","then","response","json","data","returncode","window","location","href","orderurl","console","error","returnmessage","catch"],"sources":["C:/Users/Admin/Downloads/mern-amazona-master/frontend/src/screens/ZalopayScreens.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ZaloPaySDK from 'zalopay-sdk';\r\nconst ZalopayScreens = () => {\r\n const  handleSandboxPayment = async () => {\r\n  const api_key = '9phuAOYhan4urywHTh0ndEXiV3pKHr5Q';\r\n\r\n  // Tạo dữ liệu đơn hàng thử nghiệm\r\n  const orderData = {\r\n    app_id: '553',\r\n    app_user: 'user123',\r\n    app_time: new Date().toISOString(),\r\n    app_trans_id: 'TEST123',\r\n    app_data: 'Test data',\r\n    amount: 10000, // Số tiền thanh toán thử nghiệm\r\n    description: 'Thanh toán thử nghiệm',\r\n  };\r\n\r\n  // Gửi dữ liệu đơn hàng và thông tin API key đến ZaloPay Sandbox\r\n  fetch('https://sandbox.zalopay.com.vn/api/v2/create', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'x-magento-secret': api_key,\r\n    },\r\n    body: JSON.stringify(orderData),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // Xử lý kết quả và thực hiện thanh toán thử nghiệm\r\n      if (data.returncode === 1) {\r\n        window.location.href = data.orderurl; // Redirect người dùng đến URL thanh toán\r\n      } else {\r\n        console.error('Lỗi khi tạo đơn hàng:', data.returnmessage);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Lỗi khi gửi yêu cầu đơn hàng:', error);\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n    <h1>Chọn ZaloPay Sandbox để thanh toán</h1>\r\n    <button onClick={handleSandboxPayment}>Thanh toán với ZaloPay Sandbox</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZalopayScreens;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,aAAa;AAAC;AACrC,MAAMC,cAAc,GAAG,MAAM;EAC5B,MAAOC,oBAAoB,GAAG,YAAY;IACzC,MAAMC,OAAO,GAAG,kCAAkC;;IAElD;IACA,MAAMC,SAAS,GAAG;MAChBC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,SAAS;MACnBC,QAAQ,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MAClCC,YAAY,EAAE,SAAS;MACvBC,QAAQ,EAAE,WAAW;MACrBC,MAAM,EAAE,KAAK;MAAE;MACfC,WAAW,EAAE;IACf,CAAC;;IAED;IACAC,KAAK,CAAC,8CAA8C,EAAE;MACpDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,kBAAkB,EAAEb;MACtB,CAAC;MACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,SAAS;IAChC,CAAC,CAAC,CACCgB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACA,IAAIA,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QACzBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,IAAI,CAACK,QAAQ,CAAC,CAAC;MACxC,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEP,IAAI,CAACQ,aAAa,CAAC;MAC5D;IACF,CAAC,CAAC,CACDC,KAAK,CAAEF,KAAK,IAAK;MAChBD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC;EACD,oBACE;IAAA,wBACA;MAAA,UAAI;IAAkC;MAAA;MAAA;MAAA;IAAA,QAAK,eAC3C;MAAQ,OAAO,EAAE5B,oBAAqB;MAAA,UAAC;IAA8B;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACxE;AAEV,CAAC;AAAC,KA3CID,cAAc;AA6CpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}