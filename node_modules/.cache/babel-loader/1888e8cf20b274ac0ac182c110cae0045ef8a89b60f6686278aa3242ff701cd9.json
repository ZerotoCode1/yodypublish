{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _classCallCheck from \"C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() {}\nvar hasXHR2 = function () {\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\nexport var Polling = /*#__PURE__*/function (_Transport) {\n  _inherits(Polling, _Transport);\n  var _super = _createSuper(Polling);\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @package\n   */\n  function Polling(opts) {\n    var _this;\n    _classCallCheck(this, Polling);\n    _this = _super.call(this, opts);\n    _this.polling = false;\n    if (typeof location !== \"undefined\") {\n      var isSSL = \"https:\" === location.protocol;\n      var port = location.port;\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n      _this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n    }\n    /**\n     * XHR supports binary\n     */\n    var forceBase64 = opts && opts.forceBase64;\n    _this.supportsBinary = hasXHR2 && !forceBase64;\n    if (_this.opts.withCredentials) {\n      _this.cookieJar = createCookieJar();\n    }\n    return _this;\n  }\n  _createClass(Polling, [{\n    key: \"name\",\n    get: function get() {\n      return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n  }, {\n    key: \"doOpen\",\n    value: function doOpen() {\n      this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n  }, {\n    key: \"pause\",\n    value: function pause(onPause) {\n      var _this2 = this;\n      this.readyState = \"pausing\";\n      var pause = function pause() {\n        _this2.readyState = \"paused\";\n        onPause();\n      };\n      if (this.polling || !this.writable) {\n        var total = 0;\n        if (this.polling) {\n          total++;\n          this.once(\"pollComplete\", function () {\n            --total || pause();\n          });\n        }\n        if (!this.writable) {\n          total++;\n          this.once(\"drain\", function () {\n            --total || pause();\n          });\n        }\n      } else {\n        pause();\n      }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      this.polling = true;\n      this.doPoll();\n      this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      var _this3 = this;\n      var callback = function callback(packet) {\n        // if its the first message we consider the transport open\n        if (\"opening\" === _this3.readyState && packet.type === \"open\") {\n          _this3.onOpen();\n        }\n        // if its a close packet, we close the ongoing requests\n        if (\"close\" === packet.type) {\n          _this3.onClose({\n            description: \"transport closed by the server\"\n          });\n          return false;\n        }\n        // otherwise bypass onData and handle the message\n        _this3.onPacket(packet);\n      };\n      // decode payload\n      decodePayload(data, this.socket.binaryType).forEach(callback);\n      // if an event did not trigger closing\n      if (\"closed\" !== this.readyState) {\n        // if we got data we're not polling\n        this.polling = false;\n        this.emitReserved(\"pollComplete\");\n        if (\"open\" === this.readyState) {\n          this.poll();\n        } else {}\n      }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n  }, {\n    key: \"doClose\",\n    value: function doClose() {\n      var _this4 = this;\n      var close = function close() {\n        _this4.write([{\n          type: \"close\"\n        }]);\n      };\n      if (\"open\" === this.readyState) {\n        close();\n      } else {\n        // in case we're trying to close while\n        // handshaking is in progress (GH-164)\n        this.once(\"open\", close);\n      }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n  }, {\n    key: \"write\",\n    value: function write(packets) {\n      var _this5 = this;\n      this.writable = false;\n      encodePayload(packets, function (data) {\n        _this5.doWrite(data, function () {\n          _this5.writable = true;\n          _this5.emitReserved(\"drain\");\n        });\n      });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n  }, {\n    key: \"uri\",\n    value: function uri() {\n      var schema = this.opts.secure ? \"https\" : \"http\";\n      var query = this.query || {};\n      // cache busting is forced\n      if (false !== this.opts.timestampRequests) {\n        query[this.opts.timestampParam] = yeast();\n      }\n      if (!this.supportsBinary && !query.sid) {\n        query.b64 = 1;\n      }\n      return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n  }, {\n    key: \"request\",\n    value: function request() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      Object.assign(opts, {\n        xd: this.xd,\n        cookieJar: this.cookieJar\n      }, this.opts);\n      return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var _this6 = this;\n      var req = this.request({\n        method: \"POST\",\n        data: data\n      });\n      req.on(\"success\", fn);\n      req.on(\"error\", function (xhrStatus, context) {\n        _this6.onError(\"xhr post error\", xhrStatus, context);\n      });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      var _this7 = this;\n      var req = this.request();\n      req.on(\"data\", this.onData.bind(this));\n      req.on(\"error\", function (xhrStatus, context) {\n        _this7.onError(\"xhr poll error\", xhrStatus, context);\n      });\n      this.pollXhr = req;\n    }\n  }]);\n  return Polling;\n}(Transport);\nexport var Request = /*#__PURE__*/function (_Emitter) {\n  _inherits(Request, _Emitter);\n  var _super2 = _createSuper(Request);\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @package\n   */\n  function Request(uri, opts) {\n    var _this8;\n    _classCallCheck(this, Request);\n    _this8 = _super2.call(this);\n    installTimerFunctions(_assertThisInitialized(_this8), opts);\n    _this8.opts = opts;\n    _this8.method = opts.method || \"GET\";\n    _this8.uri = uri;\n    _this8.data = undefined !== opts.data ? opts.data : null;\n    _this8.create();\n    return _this8;\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @private\n   */\n  _createClass(Request, [{\n    key: \"create\",\n    value: function create() {\n      var _this9 = this;\n      var _a;\n      var opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n      opts.xdomain = !!this.opts.xd;\n      var xhr = this.xhr = new XMLHttpRequest(opts);\n      try {\n        xhr.open(this.method, this.uri, true);\n        try {\n          if (this.opts.extraHeaders) {\n            xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n            for (var i in this.opts.extraHeaders) {\n              if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n              }\n            }\n          }\n        } catch (e) {}\n        if (\"POST\" === this.method) {\n          try {\n            xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n          } catch (e) {}\n        }\n        try {\n          xhr.setRequestHeader(\"Accept\", \"*/*\");\n        } catch (e) {}\n        (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n        // ie6 check\n        if (\"withCredentials\" in xhr) {\n          xhr.withCredentials = this.opts.withCredentials;\n        }\n        if (this.opts.requestTimeout) {\n          xhr.timeout = this.opts.requestTimeout;\n        }\n        xhr.onreadystatechange = function () {\n          var _a;\n          if (xhr.readyState === 3) {\n            (_a = _this9.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n          }\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            _this9.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            _this9.setTimeoutFn(function () {\n              _this9.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n        xhr.send(this.data);\n      } catch (e) {\n        // Need to defer since .create() is called directly from the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        this.setTimeoutFn(function () {\n          _this9.onError(e);\n        }, 0);\n        return;\n      }\n      if (typeof document !== \"undefined\") {\n        this.index = Request.requestsCount++;\n        Request.requests[this.index] = this;\n      }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n  }, {\n    key: \"onError\",\n    value: function onError(err) {\n      this.emitReserved(\"error\", err, this.xhr);\n      this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n  }, {\n    key: \"cleanup\",\n    value: function cleanup(fromError) {\n      if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n        return;\n      }\n      this.xhr.onreadystatechange = empty;\n      if (fromError) {\n        try {\n          this.xhr.abort();\n        } catch (e) {}\n      }\n      if (typeof document !== \"undefined\") {\n        delete Request.requests[this.index];\n      }\n      this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n  }, {\n    key: \"onLoad\",\n    value: function onLoad() {\n      var data = this.xhr.responseText;\n      if (data !== null) {\n        this.emitReserved(\"data\", data);\n        this.emitReserved(\"success\");\n        this.cleanup();\n      }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this.cleanup();\n    }\n  }]);\n  return Request;\n}(Emitter);\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    var terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"names":["Transport","yeast","encodePayload","decodePayload","createCookieJar","XHR","XMLHttpRequest","Emitter","installTimerFunctions","pick","globalThisShim","globalThis","empty","hasXHR2","xhr","xdomain","responseType","Polling","opts","polling","location","isSSL","protocol","port","xd","hostname","forceBase64","supportsBinary","withCredentials","cookieJar","poll","onPause","readyState","pause","writable","total","once","doPoll","emitReserved","data","callback","packet","type","onOpen","onClose","description","onPacket","socket","binaryType","forEach","close","write","packets","doWrite","schema","secure","query","timestampRequests","timestampParam","sid","b64","createUri","Object","assign","Request","uri","fn","req","request","method","on","xhrStatus","context","onError","onData","bind","pollXhr","undefined","create","_a","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","err","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent"],"sources":["C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/engine.io-client/build/esm/transports/polling.js"],"sourcesContent":["import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,aAAa,EAAEC,aAAa,QAAQ,kBAAkB;AAC/D,SAASC,eAAe,EAAEC,GAAG,IAAIC,cAAc,QAAS,qBAAqB;AAC7E,SAASC,OAAO,QAAQ,8BAA8B;AACtD,SAASC,qBAAqB,EAAEC,IAAI,QAAQ,YAAY;AACxD,SAASC,cAAc,IAAIC,UAAU,QAAQ,kBAAkB;AAC/D,SAASC,KAAK,GAAG,CAAE;AACnB,IAAMC,OAAO,GAAI,YAAY;EACzB,IAAMC,GAAG,GAAG,IAAIR,cAAc,CAAC;IAC3BS,OAAO,EAAE;EACb,CAAC,CAAC;EACF,OAAO,IAAI,IAAID,GAAG,CAACE,YAAY;AACnC,CAAC,EAAG;AACJ,WAAaC,OAAO;EAAA;EAAA;EAChB;AACJ;AACA;AACA;AACA;AACA;EACI,iBAAYC,IAAI,EAAE;IAAA;IAAA;IACd,0BAAMA,IAAI;IACV,MAAKC,OAAO,GAAG,KAAK;IACpB,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;MACjC,IAAMC,KAAK,GAAG,QAAQ,KAAKD,QAAQ,CAACE,QAAQ;MAC5C,IAAIC,IAAI,GAAGH,QAAQ,CAACG,IAAI;MACxB;MACA,IAAI,CAACA,IAAI,EAAE;QACPA,IAAI,GAAGF,KAAK,GAAG,KAAK,GAAG,IAAI;MAC/B;MACA,MAAKG,EAAE,GACF,OAAOJ,QAAQ,KAAK,WAAW,IAC5BF,IAAI,CAACO,QAAQ,KAAKL,QAAQ,CAACK,QAAQ,IACnCF,IAAI,KAAKL,IAAI,CAACK,IAAI;IAC9B;IACA;AACR;AACA;IACQ,IAAMG,WAAW,GAAGR,IAAI,IAAIA,IAAI,CAACQ,WAAW;IAC5C,MAAKC,cAAc,GAAGd,OAAO,IAAI,CAACa,WAAW;IAC7C,IAAI,MAAKR,IAAI,CAACU,eAAe,EAAE;MAC3B,MAAKC,SAAS,GAAGzB,eAAe,EAAE;IACtC;IAAC;EACL;EAAC;IAAA;IAAA,KACD,eAAW;MACP,OAAO,SAAS;IACpB;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,kBAAS;MACL,IAAI,CAAC0B,IAAI,EAAE;IACf;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,eAAMC,OAAO,EAAE;MAAA;MACX,IAAI,CAACC,UAAU,GAAG,SAAS;MAC3B,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;QAChB,MAAI,CAACD,UAAU,GAAG,QAAQ;QAC1BD,OAAO,EAAE;MACb,CAAC;MACD,IAAI,IAAI,CAACZ,OAAO,IAAI,CAAC,IAAI,CAACe,QAAQ,EAAE;QAChC,IAAIC,KAAK,GAAG,CAAC;QACb,IAAI,IAAI,CAAChB,OAAO,EAAE;UACdgB,KAAK,EAAE;UACP,IAAI,CAACC,IAAI,CAAC,cAAc,EAAE,YAAY;YAClC,EAAED,KAAK,IAAIF,KAAK,EAAE;UACtB,CAAC,CAAC;QACN;QACA,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;UAChBC,KAAK,EAAE;UACP,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,YAAY;YAC3B,EAAED,KAAK,IAAIF,KAAK,EAAE;UACtB,CAAC,CAAC;QACN;MACJ,CAAC,MACI;QACDA,KAAK,EAAE;MACX;IACJ;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,gBAAO;MACH,IAAI,CAACd,OAAO,GAAG,IAAI;MACnB,IAAI,CAACkB,MAAM,EAAE;MACb,IAAI,CAACC,YAAY,CAAC,MAAM,CAAC;IAC7B;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,gBAAOC,IAAI,EAAE;MAAA;MACT,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,MAAM,EAAK;QACzB;QACA,IAAI,SAAS,KAAK,MAAI,CAACT,UAAU,IAAIS,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;UACzD,MAAI,CAACC,MAAM,EAAE;QACjB;QACA;QACA,IAAI,OAAO,KAAKF,MAAM,CAACC,IAAI,EAAE;UACzB,MAAI,CAACE,OAAO,CAAC;YAAEC,WAAW,EAAE;UAAiC,CAAC,CAAC;UAC/D,OAAO,KAAK;QAChB;QACA;QACA,MAAI,CAACC,QAAQ,CAACL,MAAM,CAAC;MACzB,CAAC;MACD;MACAtC,aAAa,CAACoC,IAAI,EAAE,IAAI,CAACQ,MAAM,CAACC,UAAU,CAAC,CAACC,OAAO,CAACT,QAAQ,CAAC;MAC7D;MACA,IAAI,QAAQ,KAAK,IAAI,CAACR,UAAU,EAAE;QAC9B;QACA,IAAI,CAACb,OAAO,GAAG,KAAK;QACpB,IAAI,CAACmB,YAAY,CAAC,cAAc,CAAC;QACjC,IAAI,MAAM,KAAK,IAAI,CAACN,UAAU,EAAE;UAC5B,IAAI,CAACF,IAAI,EAAE;QACf,CAAC,MACI,CACL;MACJ;IACJ;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,mBAAU;MAAA;MACN,IAAMoB,KAAK,GAAG,SAARA,KAAK,GAAS;QAChB,MAAI,CAACC,KAAK,CAAC,CAAC;UAAET,IAAI,EAAE;QAAQ,CAAC,CAAC,CAAC;MACnC,CAAC;MACD,IAAI,MAAM,KAAK,IAAI,CAACV,UAAU,EAAE;QAC5BkB,KAAK,EAAE;MACX,CAAC,MACI;QACD;QACA;QACA,IAAI,CAACd,IAAI,CAAC,MAAM,EAAEc,KAAK,CAAC;MAC5B;IACJ;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,eAAME,OAAO,EAAE;MAAA;MACX,IAAI,CAAClB,QAAQ,GAAG,KAAK;MACrBhC,aAAa,CAACkD,OAAO,EAAE,UAACb,IAAI,EAAK;QAC7B,MAAI,CAACc,OAAO,CAACd,IAAI,EAAE,YAAM;UACrB,MAAI,CAACL,QAAQ,GAAG,IAAI;UACpB,MAAI,CAACI,YAAY,CAAC,OAAO,CAAC;QAC9B,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,eAAM;MACF,IAAMgB,MAAM,GAAG,IAAI,CAACpC,IAAI,CAACqC,MAAM,GAAG,OAAO,GAAG,MAAM;MAClD,IAAMC,KAAK,GAAG,IAAI,CAACA,KAAK,IAAI,CAAC,CAAC;MAC9B;MACA,IAAI,KAAK,KAAK,IAAI,CAACtC,IAAI,CAACuC,iBAAiB,EAAE;QACvCD,KAAK,CAAC,IAAI,CAACtC,IAAI,CAACwC,cAAc,CAAC,GAAGzD,KAAK,EAAE;MAC7C;MACA,IAAI,CAAC,IAAI,CAAC0B,cAAc,IAAI,CAAC6B,KAAK,CAACG,GAAG,EAAE;QACpCH,KAAK,CAACI,GAAG,GAAG,CAAC;MACjB;MACA,OAAO,IAAI,CAACC,SAAS,CAACP,MAAM,EAAEE,KAAK,CAAC;IACxC;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,mBAAmB;MAAA,IAAXtC,IAAI,uEAAG,CAAC,CAAC;MACb4C,MAAM,CAACC,MAAM,CAAC7C,IAAI,EAAE;QAAEM,EAAE,EAAE,IAAI,CAACA,EAAE;QAAEK,SAAS,EAAE,IAAI,CAACA;MAAU,CAAC,EAAE,IAAI,CAACX,IAAI,CAAC;MAC1E,OAAO,IAAI8C,OAAO,CAAC,IAAI,CAACC,GAAG,EAAE,EAAE/C,IAAI,CAAC;IACxC;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA;IAAA,OAOA,iBAAQqB,IAAI,EAAE2B,EAAE,EAAE;MAAA;MACd,IAAMC,GAAG,GAAG,IAAI,CAACC,OAAO,CAAC;QACrBC,MAAM,EAAE,MAAM;QACd9B,IAAI,EAAEA;MACV,CAAC,CAAC;MACF4B,GAAG,CAACG,EAAE,CAAC,SAAS,EAAEJ,EAAE,CAAC;MACrBC,GAAG,CAACG,EAAE,CAAC,OAAO,EAAE,UAACC,SAAS,EAAEC,OAAO,EAAK;QACpC,MAAI,CAACC,OAAO,CAAC,gBAAgB,EAAEF,SAAS,EAAEC,OAAO,CAAC;MACtD,CAAC,CAAC;IACN;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,kBAAS;MAAA;MACL,IAAML,GAAG,GAAG,IAAI,CAACC,OAAO,EAAE;MAC1BD,GAAG,CAACG,EAAE,CAAC,MAAM,EAAE,IAAI,CAACI,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MACtCR,GAAG,CAACG,EAAE,CAAC,OAAO,EAAE,UAACC,SAAS,EAAEC,OAAO,EAAK;QACpC,MAAI,CAACC,OAAO,CAAC,gBAAgB,EAAEF,SAAS,EAAEC,OAAO,CAAC;MACtD,CAAC,CAAC;MACF,IAAI,CAACI,OAAO,GAAGT,GAAG;IACtB;EAAC;EAAA;AAAA,EA9MwBnE,SAAS;AAgNtC,WAAagE,OAAO;EAAA;EAAA;EAChB;AACJ;AACA;AACA;AACA;AACA;EACI,iBAAYC,GAAG,EAAE/C,IAAI,EAAE;IAAA;IAAA;IACnB;IACAV,qBAAqB,iCAAOU,IAAI,CAAC;IACjC,OAAKA,IAAI,GAAGA,IAAI;IAChB,OAAKmD,MAAM,GAAGnD,IAAI,CAACmD,MAAM,IAAI,KAAK;IAClC,OAAKJ,GAAG,GAAGA,GAAG;IACd,OAAK1B,IAAI,GAAGsC,SAAS,KAAK3D,IAAI,CAACqB,IAAI,GAAGrB,IAAI,CAACqB,IAAI,GAAG,IAAI;IACtD,OAAKuC,MAAM,EAAE;IAAC;EAClB;EACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,kBAAS;MAAA;MACL,IAAIC,EAAE;MACN,IAAM7D,IAAI,GAAGT,IAAI,CAAC,IAAI,CAACS,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,oBAAoB,EAAE,WAAW,CAAC;MAC7HA,IAAI,CAACH,OAAO,GAAG,CAAC,CAAC,IAAI,CAACG,IAAI,CAACM,EAAE;MAC7B,IAAMV,GAAG,GAAI,IAAI,CAACA,GAAG,GAAG,IAAIR,cAAc,CAACY,IAAI,CAAE;MACjD,IAAI;QACAJ,GAAG,CAACkE,IAAI,CAAC,IAAI,CAACX,MAAM,EAAE,IAAI,CAACJ,GAAG,EAAE,IAAI,CAAC;QACrC,IAAI;UACA,IAAI,IAAI,CAAC/C,IAAI,CAAC+D,YAAY,EAAE;YACxBnE,GAAG,CAACoE,qBAAqB,IAAIpE,GAAG,CAACoE,qBAAqB,CAAC,IAAI,CAAC;YAC5D,KAAK,IAAIC,CAAC,IAAI,IAAI,CAACjE,IAAI,CAAC+D,YAAY,EAAE;cAClC,IAAI,IAAI,CAAC/D,IAAI,CAAC+D,YAAY,CAACG,cAAc,CAACD,CAAC,CAAC,EAAE;gBAC1CrE,GAAG,CAACuE,gBAAgB,CAACF,CAAC,EAAE,IAAI,CAACjE,IAAI,CAAC+D,YAAY,CAACE,CAAC,CAAC,CAAC;cACtD;YACJ;UACJ;QACJ,CAAC,CACD,OAAOG,CAAC,EAAE,CAAE;QACZ,IAAI,MAAM,KAAK,IAAI,CAACjB,MAAM,EAAE;UACxB,IAAI;YACAvD,GAAG,CAACuE,gBAAgB,CAAC,cAAc,EAAE,0BAA0B,CAAC;UACpE,CAAC,CACD,OAAOC,CAAC,EAAE,CAAE;QAChB;QACA,IAAI;UACAxE,GAAG,CAACuE,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC;QACzC,CAAC,CACD,OAAOC,CAAC,EAAE,CAAE;QACZ,CAACP,EAAE,GAAG,IAAI,CAAC7D,IAAI,CAACW,SAAS,MAAM,IAAI,IAAIkD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,UAAU,CAACzE,GAAG,CAAC;QAClF;QACA,IAAI,iBAAiB,IAAIA,GAAG,EAAE;UAC1BA,GAAG,CAACc,eAAe,GAAG,IAAI,CAACV,IAAI,CAACU,eAAe;QACnD;QACA,IAAI,IAAI,CAACV,IAAI,CAACsE,cAAc,EAAE;UAC1B1E,GAAG,CAAC2E,OAAO,GAAG,IAAI,CAACvE,IAAI,CAACsE,cAAc;QAC1C;QACA1E,GAAG,CAAC4E,kBAAkB,GAAG,YAAM;UAC3B,IAAIX,EAAE;UACN,IAAIjE,GAAG,CAACkB,UAAU,KAAK,CAAC,EAAE;YACtB,CAAC+C,EAAE,GAAG,MAAI,CAAC7D,IAAI,CAACW,SAAS,MAAM,IAAI,IAAIkD,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,YAAY,CAAC7E,GAAG,CAAC;UACxF;UACA,IAAI,CAAC,KAAKA,GAAG,CAACkB,UAAU,EACpB;UACJ,IAAI,GAAG,KAAKlB,GAAG,CAAC8E,MAAM,IAAI,IAAI,KAAK9E,GAAG,CAAC8E,MAAM,EAAE;YAC3C,MAAI,CAACC,MAAM,EAAE;UACjB,CAAC,MACI;YACD;YACA;YACA,MAAI,CAACC,YAAY,CAAC,YAAM;cACpB,MAAI,CAACrB,OAAO,CAAC,OAAO3D,GAAG,CAAC8E,MAAM,KAAK,QAAQ,GAAG9E,GAAG,CAAC8E,MAAM,GAAG,CAAC,CAAC;YACjE,CAAC,EAAE,CAAC,CAAC;UACT;QACJ,CAAC;QACD9E,GAAG,CAACiF,IAAI,CAAC,IAAI,CAACxD,IAAI,CAAC;MACvB,CAAC,CACD,OAAO+C,CAAC,EAAE;QACN;QACA;QACA;QACA,IAAI,CAACQ,YAAY,CAAC,YAAM;UACpB,MAAI,CAACrB,OAAO,CAACa,CAAC,CAAC;QACnB,CAAC,EAAE,CAAC,CAAC;QACL;MACJ;MACA,IAAI,OAAOU,QAAQ,KAAK,WAAW,EAAE;QACjC,IAAI,CAACC,KAAK,GAAGjC,OAAO,CAACkC,aAAa,EAAE;QACpClC,OAAO,CAACmC,QAAQ,CAAC,IAAI,CAACF,KAAK,CAAC,GAAG,IAAI;MACvC;IACJ;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,iBAAQG,GAAG,EAAE;MACT,IAAI,CAAC9D,YAAY,CAAC,OAAO,EAAE8D,GAAG,EAAE,IAAI,CAACtF,GAAG,CAAC;MACzC,IAAI,CAACuF,OAAO,CAAC,IAAI,CAAC;IACtB;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,iBAAQC,SAAS,EAAE;MACf,IAAI,WAAW,KAAK,OAAO,IAAI,CAACxF,GAAG,IAAI,IAAI,KAAK,IAAI,CAACA,GAAG,EAAE;QACtD;MACJ;MACA,IAAI,CAACA,GAAG,CAAC4E,kBAAkB,GAAG9E,KAAK;MACnC,IAAI0F,SAAS,EAAE;QACX,IAAI;UACA,IAAI,CAACxF,GAAG,CAACyF,KAAK,EAAE;QACpB,CAAC,CACD,OAAOjB,CAAC,EAAE,CAAE;MAChB;MACA,IAAI,OAAOU,QAAQ,KAAK,WAAW,EAAE;QACjC,OAAOhC,OAAO,CAACmC,QAAQ,CAAC,IAAI,CAACF,KAAK,CAAC;MACvC;MACA,IAAI,CAACnF,GAAG,GAAG,IAAI;IACnB;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,kBAAS;MACL,IAAMyB,IAAI,GAAG,IAAI,CAACzB,GAAG,CAAC0F,YAAY;MAClC,IAAIjE,IAAI,KAAK,IAAI,EAAE;QACf,IAAI,CAACD,YAAY,CAAC,MAAM,EAAEC,IAAI,CAAC;QAC/B,IAAI,CAACD,YAAY,CAAC,SAAS,CAAC;QAC5B,IAAI,CAAC+D,OAAO,EAAE;MAClB;IACJ;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,iBAAQ;MACJ,IAAI,CAACA,OAAO,EAAE;IAClB;EAAC;EAAA;AAAA,EA7IwB9F,OAAO;AA+IpCyD,OAAO,CAACkC,aAAa,GAAG,CAAC;AACzBlC,OAAO,CAACmC,QAAQ,GAAG,CAAC,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA,IAAI,OAAOH,QAAQ,KAAK,WAAW,EAAE;EACjC;EACA,IAAI,OAAOS,WAAW,KAAK,UAAU,EAAE;IACnC;IACAA,WAAW,CAAC,UAAU,EAAEC,aAAa,CAAC;EAC1C,CAAC,MACI,IAAI,OAAOC,gBAAgB,KAAK,UAAU,EAAE;IAC7C,IAAMC,gBAAgB,GAAG,YAAY,IAAIjG,UAAU,GAAG,UAAU,GAAG,QAAQ;IAC3EgG,gBAAgB,CAACC,gBAAgB,EAAEF,aAAa,EAAE,KAAK,CAAC;EAC5D;AACJ;AACA,SAASA,aAAa,GAAG;EACrB,KAAK,IAAIvB,CAAC,IAAInB,OAAO,CAACmC,QAAQ,EAAE;IAC5B,IAAInC,OAAO,CAACmC,QAAQ,CAACf,cAAc,CAACD,CAAC,CAAC,EAAE;MACpCnB,OAAO,CAACmC,QAAQ,CAAChB,CAAC,CAAC,CAACoB,KAAK,EAAE;IAC/B;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}