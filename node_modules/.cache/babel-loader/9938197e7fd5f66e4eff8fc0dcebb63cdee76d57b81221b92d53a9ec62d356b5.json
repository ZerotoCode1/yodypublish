{"ast":null,"code":"import _slicedToArray from\"C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useEffect,useState}from'react';import{Helmet}from'react-helmet-async';import{useNavigate}from'react-router-dom';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import CheckoutSteps from'../components/CheckoutSteps';import{Store}from'../Store';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PaymentMethodScreen(){var navigate=useNavigate();var _useContext=useContext(Store),state=_useContext.state,ctxDispatch=_useContext.dispatch;var _state$cart=state.cart,shippingAddress=_state$cart.shippingAddress,paymentMethod=_state$cart.paymentMethod;var _useState=useState(paymentMethod||'PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethodName=_useState2[0],setPaymentMethod=_useState2[1];useEffect(function(){if(!shippingAddress.address){navigate('/shipping');}},[shippingAddress,navigate]);console.log(state);var submitHandler=function submitHandler(e){e.preventDefault();ctxDispatch({type:'SAVE_PAYMENT_METHOD',payload:paymentMethodName});localStorage.setItem('paymentMethod',paymentMethodName);if(paymentMethodName=='ZaloPay'){navigate('/zalopay');}else{navigate('/placeorder');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"container small-container\",children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"Payment Method\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"my-3\",children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"PayPal\",label:\"PayPal\",value:\"PayPal\",checked:paymentMethodName==='PayPal',onChange:function onChange(e){return setPaymentMethod(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"Stripe\",label:\"Stripe\",value:\"Stripe\",checked:paymentMethodName==='Stripe',onChange:function onChange(e){return setPaymentMethod(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"ZaloPay\",label:\"ZaloPay\",value:\"ZaloPay\",checked:paymentMethodName==='ZaloPay',onChange:function onChange(e){return setPaymentMethod(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Continue\"})})]})]})]});}","map":{"version":3,"names":["React","useContext","useEffect","useState","Helmet","useNavigate","Form","Button","CheckoutSteps","Store","PaymentMethodScreen","navigate","state","ctxDispatch","dispatch","cart","shippingAddress","paymentMethod","paymentMethodName","setPaymentMethod","address","console","log","submitHandler","e","preventDefault","type","payload","localStorage","setItem","target","value"],"sources":["C:/Users/Admin/Downloads/mern-amazona-master/frontend/src/screens/PaymentMethodScreen.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { Store } from '../Store';\nexport default function PaymentMethodScreen() {\n  \n  const navigate = useNavigate();\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { shippingAddress, paymentMethod },\n  } = state;\n\n  const [paymentMethodName, setPaymentMethod] = useState(\n    paymentMethod || 'PayPal'\n  );\n\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n  console.log(state);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    if(paymentMethodName =='ZaloPay'){\n      navigate('/zalopay');\n    }else{\n      navigate('/placeorder');\n    }\n\n   \n  };\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\n      <div className=\"container small-container\">\n        <Helmet>\n          <title>Payment Method</title>\n        </Helmet>\n        <h1 className=\"my-3\">Payment Method</h1>\n        <Form onSubmit={submitHandler}>\n          <div className=\"mb-3\">\n            <Form.Check\n              type=\"radio\"\n              id=\"PayPal\"\n              label=\"PayPal\"\n              value=\"PayPal\"\n              checked={paymentMethodName === 'PayPal'}\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <Form.Check\n              type=\"radio\"\n              id=\"Stripe\"\n              label=\"Stripe\"\n              value=\"Stripe\"\n              checked={paymentMethodName === 'Stripe'}\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n          <Form.Check\n            type=\"radio\"\n            id=\"ZaloPay\"\n            label=\"ZaloPay\"\n            value=\"ZaloPay\"\n            checked={paymentMethodName === 'ZaloPay'}\n            onChange={(e) => setPaymentMethod(e.target.value)}\n          />\n        </div>\n          <div className=\"mb-3\">\n            <Button type=\"submit\">Continue</Button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}