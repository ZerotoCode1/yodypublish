{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Admin/Downloads/mern-amazona-master/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Axios from'axios';import{useContext,useEffect,useState}from'react';import Container from'react-bootstrap/Container';import Button from'react-bootstrap/Button';import Form from'react-bootstrap/Form';import{Helmet}from'react-helmet-async';import{useNavigate,useParams}from'react-router-dom';import{toast}from'react-toastify';import{Store}from'../Store';import{getError}from'../utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ResetPasswordScreen(){var navigate=useNavigate();var _useParams=useParams(),token=_useParams.token;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var _useContext=useContext(Store),state=_useContext.state;var userInfo=state.userInfo;useEffect(function(){if(userInfo||!token){navigate('/');}},[navigate,userInfo,token]);var submitHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}toast.error('Passwords do not match');return _context.abrupt(\"return\");case 4:_context.prev=4;_context.next=7;return Axios.post('/api/users/reset-password',{password:password,token:token});case 7:navigate('/signin');toast.success('Password updated successfully');_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](4);toast.error(getError(_context.t0));case 14:case\"end\":return _context.stop();}},_callee,null,[[4,11]]);}));return function submitHandler(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Container,{className:\"small-container\",children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"Reset Password\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"my-3\",children:\"Reset Password\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"New Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",required:true,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm New Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);},required:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Reset Password\"})})]})]});}","map":{"version":3,"names":["Axios","useContext","useEffect","useState","Container","Button","Form","Helmet","useNavigate","useParams","toast","Store","getError","ResetPasswordScreen","navigate","token","password","setPassword","confirmPassword","setConfirmPassword","state","userInfo","submitHandler","e","preventDefault","error","post","success","target","value"],"sources":["C:/Users/Admin/Downloads/mern-amazona-master/frontend/src/screens/ResetPasswordScreen.js"],"sourcesContent":["import Axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nexport default function ResetPasswordScreen() {\n  const navigate = useNavigate();\n  const { token } = useParams();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  useEffect(() => {\n    if (userInfo || !token) {\n      navigate('/');\n    }\n  }, [navigate, userInfo, token]);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    try {\n      await Axios.post('/api/users/reset-password', {\n        password,\n        token,\n      });\n      navigate('/signin');\n      toast.success('Password updated successfully');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Reset Password</title>\n      </Helmet>\n      <h1 className=\"my-3\">Reset Password</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Reset Password</Button>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n"],"mappings":"ibAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACvD,MAAOC,UAAS,KAAM,2BAA2B,CACjD,MAAOC,OAAM,KAAM,wBAAwB,CAC3C,MAAOC,KAAI,KAAM,sBAAsB,CACvC,OAASC,MAAM,KAAQ,oBAAoB,CAC3C,OAASC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CACzD,OAASC,KAAK,KAAQ,gBAAgB,CACtC,OAASC,KAAK,KAAQ,UAAU,CAChC,OAASC,QAAQ,KAAQ,UAAU,CAAC,wFAEpC,cAAe,SAASC,oBAAmB,EAAG,CAC5C,GAAMC,SAAQ,CAAGN,WAAW,EAAE,CAC9B,eAAkBC,SAAS,EAAE,CAArBM,KAAK,YAALA,KAAK,CAEb,cAAgCZ,QAAQ,CAAC,EAAE,CAAC,wCAArCa,QAAQ,eAAEC,WAAW,eAC5B,eAA8Cd,QAAQ,CAAC,EAAE,CAAC,yCAAnDe,eAAe,eAAEC,kBAAkB,eAE1C,gBAAkBlB,UAAU,CAACU,KAAK,CAAC,CAA3BS,KAAK,aAALA,KAAK,CACb,GAAQC,SAAQ,CAAKD,KAAK,CAAlBC,QAAQ,CAEhBnB,SAAS,CAAC,UAAM,CACd,GAAImB,QAAQ,EAAI,CAACN,KAAK,CAAE,CACtBD,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,CAAE,CAACA,QAAQ,CAAEO,QAAQ,CAAEN,KAAK,CAAC,CAAC,CAE/B,GAAMO,cAAa,4FAAG,iBAAOC,CAAC,mHAC5BA,CAAC,CAACC,cAAc,EAAE,CAAC,KACfR,QAAQ,GAAKE,eAAe,0BAC9BR,KAAK,CAACe,KAAK,CAAC,wBAAwB,CAAC,CAAC,8EAIhCzB,MAAK,CAAC0B,IAAI,CAAC,2BAA2B,CAAE,CAC5CV,QAAQ,CAARA,QAAQ,CACRD,KAAK,CAALA,KACF,CAAC,CAAC,QACFD,QAAQ,CAAC,SAAS,CAAC,CACnBJ,KAAK,CAACiB,OAAO,CAAC,+BAA+B,CAAC,CAAC,iFAE/CjB,KAAK,CAACe,KAAK,CAACb,QAAQ,aAAK,CAAC,CAAC,oEAE9B,kBAhBKU,cAAa,4CAgBlB,CAED,mBACE,MAAC,SAAS,EAAC,SAAS,CAAC,iBAAiB,wBACpC,KAAC,MAAM,wBACL,uBAAO,gBAAc,EAAQ,EACtB,cACT,WAAI,SAAS,CAAC,MAAM,UAAC,gBAAc,EAAK,cACxC,MAAC,IAAI,EAAC,QAAQ,CAAEA,aAAc,wBAC5B,MAAC,IAAI,CAAC,KAAK,EAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,wBAC/C,KAAC,IAAI,CAAC,KAAK,WAAC,cAAY,EAAa,cACrC,KAAC,IAAI,CAAC,OAAO,EACX,IAAI,CAAC,UAAU,CACf,QAAQ,MACR,QAAQ,CAAE,kBAACC,CAAC,QAAKN,YAAW,CAACM,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,EAAC,EAC7C,GACS,cACb,MAAC,IAAI,CAAC,KAAK,EAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,wBACtD,KAAC,IAAI,CAAC,KAAK,WAAC,sBAAoB,EAAa,cAC7C,KAAC,IAAI,CAAC,OAAO,EACX,IAAI,CAAC,UAAU,CACf,QAAQ,CAAE,kBAACN,CAAC,QAAKJ,mBAAkB,CAACI,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,EAAC,CACpD,QAAQ,OACR,GACS,cAEb,YAAK,SAAS,CAAC,MAAM,uBACnB,KAAC,MAAM,EAAC,IAAI,CAAC,QAAQ,UAAC,gBAAc,EAAS,EACzC,GACD,GACG,CAEhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}