{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\mern-amazona-master\\\\frontend\\\\src\\\\screens\\\\ZalopayScreens.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // npm install axios\nimport CryptoJS from 'crypto-js'; // npm install crypto-js\nimport { v1 as uuid } from 'uuid'; // npm install uuid\nimport moment from 'moment'; // npm install moment\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZalopayScreens = () => {\n  _s();\n  const [data, setdata] = useState();\n  try {\n    const fetchOrder = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`https://apiwenandapp.onrender.com/api/orders/${orderId}`, {\n\n          //   headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        console.log(data);\n      } catch (err) {}\n    };\n    fetchOrder();\n  } catch (error) {\n    console.log(error);\n  }\n  const handlecli = () => {\n    window.location.href = data.data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlecli,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ZalopayScreens, \"/FWmdgCHjVTZCv6DnF7p1Yh52ic=\");\n_c = ZalopayScreens;\nexport default ZalopayScreens;\nvar _c;\n$RefreshReg$(_c, \"ZalopayScreens\");","map":{"version":3,"names":["React","useState","useEffect","axios","CryptoJS","v1","uuid","moment","Button","ZalopayScreens","data","setdata","fetchOrder","dispatch","type","get","orderId","console","log","err","error","handlecli","window","location","href"],"sources":["C:/Users/Admin/Downloads/mern-amazona-master/frontend/src/screens/ZalopayScreens.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport axios from 'axios' // npm install axios\r\nimport CryptoJS from'crypto-js' // npm install crypto-js\r\nimport { v1 as uuid} from  'uuid'// npm install uuid\r\nimport moment from'moment'// npm install moment\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst ZalopayScreens = () => {\r\nconst [data,setdata]=useState()\r\n  try {\r\n    const fetchOrder = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH_REQUEST' });\r\n        const { data } = await axios.get(`https://apiwenandapp.onrender.com/api/orders/${orderId}`, {\r\n      \r\n     //   headers: { authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        console.log(data);\r\n       \r\n      } catch (err) {\r\n       \r\n      }\r\n    };\r\n    fetchOrder()\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n const handlecli=()=>{\r\n  \r\n  window.location.href=data.data\r\n }\r\n\r\n  return (\r\n    <div>\r\n        <button onClick={handlecli}>Click</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZalopayScreens;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO,EAAC;AAC1B,OAAOC,QAAQ,MAAK,WAAW,EAAC;AAChC,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,OAAOC,MAAM,MAAK,QAAQ;AAC1B,SAASC,MAAM,QAAQ,iBAAiB;AAAC;AAEzC,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC7B,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACV,QAAQ,EAAE;EAC7B,IAAI;IACF,MAAMW,UAAU,GAAG,YAAY;MAC7B,IAAI;QACFC,QAAQ,CAAC;UAAEC,IAAI,EAAE;QAAgB,CAAC,CAAC;QACnC,MAAM;UAAEJ;QAAK,CAAC,GAAG,MAAMP,KAAK,CAACY,GAAG,CAAE,gDAA+CC,OAAQ,EAAC,EAAE;;UAE/F;QAAA,CACI,CAAC;QACFC,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MAEnB,CAAC,CAAC,OAAOS,GAAG,EAAE,CAEd;IACF,CAAC;IACDP,UAAU,EAAE;EACd,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACpB;EACD,MAAMC,SAAS,GAAC,MAAI;IAEnBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAACd,IAAI,CAACA,IAAI;EAC/B,CAAC;EAEA,oBACE;IAAA,uBACI;MAAQ,OAAO,EAAEW,SAAU;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QACxC;AAEV,CAAC;AAAC,GA9BIZ,cAAc;AAAA,KAAdA,cAAc;AAgCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}